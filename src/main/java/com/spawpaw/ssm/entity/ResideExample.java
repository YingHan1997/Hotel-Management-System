package com.spawpaw.ssm.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ResideExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    public ResideExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDtlidIsNull() {
            addCriterion("dtlid is null");
            return (Criteria) this;
        }

        public Criteria andDtlidIsNotNull() {
            addCriterion("dtlid is not null");
            return (Criteria) this;
        }

        public Criteria andDtlidEqualTo(Integer value) {
            addCriterion("dtlid =", value, "dtlid");
            return (Criteria) this;
        }

        public Criteria andDtlidNotEqualTo(Integer value) {
            addCriterion("dtlid <>", value, "dtlid");
            return (Criteria) this;
        }

        public Criteria andDtlidGreaterThan(Integer value) {
            addCriterion("dtlid >", value, "dtlid");
            return (Criteria) this;
        }

        public Criteria andDtlidGreaterThanOrEqualTo(Integer value) {
            addCriterion("dtlid >=", value, "dtlid");
            return (Criteria) this;
        }

        public Criteria andDtlidLessThan(Integer value) {
            addCriterion("dtlid <", value, "dtlid");
            return (Criteria) this;
        }

        public Criteria andDtlidLessThanOrEqualTo(Integer value) {
            addCriterion("dtlid <=", value, "dtlid");
            return (Criteria) this;
        }

        public Criteria andDtlidIn(List<Integer> values) {
            addCriterion("dtlid in", values, "dtlid");
            return (Criteria) this;
        }

        public Criteria andDtlidNotIn(List<Integer> values) {
            addCriterion("dtlid not in", values, "dtlid");
            return (Criteria) this;
        }

        public Criteria andDtlidBetween(Integer value1, Integer value2) {
            addCriterion("dtlid between", value1, value2, "dtlid");
            return (Criteria) this;
        }

        public Criteria andDtlidNotBetween(Integer value1, Integer value2) {
            addCriterion("dtlid not between", value1, value2, "dtlid");
            return (Criteria) this;
        }

        public Criteria andResidedateIsNull() {
            addCriterion("residedate is null");
            return (Criteria) this;
        }

        public Criteria andResidedateIsNotNull() {
            addCriterion("residedate is not null");
            return (Criteria) this;
        }

        public Criteria andResidedateEqualTo(Date value) {
            addCriterionForJDBCDate("residedate =", value, "residedate");
            return (Criteria) this;
        }

        public Criteria andResidedateNotEqualTo(Date value) {
            addCriterionForJDBCDate("residedate <>", value, "residedate");
            return (Criteria) this;
        }

        public Criteria andResidedateGreaterThan(Date value) {
            addCriterionForJDBCDate("residedate >", value, "residedate");
            return (Criteria) this;
        }

        public Criteria andResidedateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("residedate >=", value, "residedate");
            return (Criteria) this;
        }

        public Criteria andResidedateLessThan(Date value) {
            addCriterionForJDBCDate("residedate <", value, "residedate");
            return (Criteria) this;
        }

        public Criteria andResidedateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("residedate <=", value, "residedate");
            return (Criteria) this;
        }

        public Criteria andResidedateIn(List<Date> values) {
            addCriterionForJDBCDate("residedate in", values, "residedate");
            return (Criteria) this;
        }

        public Criteria andResidedateNotIn(List<Date> values) {
            addCriterionForJDBCDate("residedate not in", values, "residedate");
            return (Criteria) this;
        }

        public Criteria andResidedateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("residedate between", value1, value2, "residedate");
            return (Criteria) this;
        }

        public Criteria andResidedateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("residedate not between", value1, value2, "residedate");
            return (Criteria) this;
        }

        public Criteria andRoomernameIsNull() {
            addCriterion("roomername is null");
            return (Criteria) this;
        }

        public Criteria andRoomernameIsNotNull() {
            addCriterion("roomername is not null");
            return (Criteria) this;
        }

        public Criteria andRoomernameEqualTo(String value) {
            addCriterion("roomername =", value, "roomername");
            return (Criteria) this;
        }

        public Criteria andRoomernameNotEqualTo(String value) {
            addCriterion("roomername <>", value, "roomername");
            return (Criteria) this;
        }

        public Criteria andRoomernameGreaterThan(String value) {
            addCriterion("roomername >", value, "roomername");
            return (Criteria) this;
        }

        public Criteria andRoomernameGreaterThanOrEqualTo(String value) {
            addCriterion("roomername >=", value, "roomername");
            return (Criteria) this;
        }

        public Criteria andRoomernameLessThan(String value) {
            addCriterion("roomername <", value, "roomername");
            return (Criteria) this;
        }

        public Criteria andRoomernameLessThanOrEqualTo(String value) {
            addCriterion("roomername <=", value, "roomername");
            return (Criteria) this;
        }

        public Criteria andRoomernameLike(String value) {
            addCriterion("roomername like", value, "roomername");
            return (Criteria) this;
        }

        public Criteria andRoomernameNotLike(String value) {
            addCriterion("roomername not like", value, "roomername");
            return (Criteria) this;
        }

        public Criteria andRoomernameIn(List<String> values) {
            addCriterion("roomername in", values, "roomername");
            return (Criteria) this;
        }

        public Criteria andRoomernameNotIn(List<String> values) {
            addCriterion("roomername not in", values, "roomername");
            return (Criteria) this;
        }

        public Criteria andRoomernameBetween(String value1, String value2) {
            addCriterion("roomername between", value1, value2, "roomername");
            return (Criteria) this;
        }

        public Criteria andRoomernameNotBetween(String value1, String value2) {
            addCriterion("roomername not between", value1, value2, "roomername");
            return (Criteria) this;
        }

        public Criteria andIdcardIsNull() {
            addCriterion("idcard is null");
            return (Criteria) this;
        }

        public Criteria andIdcardIsNotNull() {
            addCriterion("idcard is not null");
            return (Criteria) this;
        }

        public Criteria andIdcardEqualTo(String value) {
            addCriterion("idcard =", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotEqualTo(String value) {
            addCriterion("idcard <>", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardGreaterThan(String value) {
            addCriterion("idcard >", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardGreaterThanOrEqualTo(String value) {
            addCriterion("idcard >=", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardLessThan(String value) {
            addCriterion("idcard <", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardLessThanOrEqualTo(String value) {
            addCriterion("idcard <=", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardLike(String value) {
            addCriterion("idcard like", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotLike(String value) {
            addCriterion("idcard not like", value, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardIn(List<String> values) {
            addCriterion("idcard in", values, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotIn(List<String> values) {
            addCriterion("idcard not in", values, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardBetween(String value1, String value2) {
            addCriterion("idcard between", value1, value2, "idcard");
            return (Criteria) this;
        }

        public Criteria andIdcardNotBetween(String value1, String value2) {
            addCriterion("idcard not between", value1, value2, "idcard");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table reside
     *
     * @mbggenerated do_not_delete_during_merge Thu Jan 04 16:26:19 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table reside
     *
     * @mbggenerated Thu Jan 04 16:26:19 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}